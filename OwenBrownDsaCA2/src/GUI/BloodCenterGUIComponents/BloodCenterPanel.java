/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.BloodCenterGUIComponents;

import GUI.BloodCenterGUIComponents.WaitingAppointments.WaitingAppointmentsFrame;
import GUI.BloodCenterGUIComponents.BBCheckPatientIN.CheckBBPatientInFrame;
import ApplicationLogic.Appointment;
import GUI.BloodCenterGUIComponents.TodaysAppointments.TodaysAppointmentsFrame;
import ApplicationLogic.BloodTestCenter;
import GUI.BloodCenterGUIComponents.LateAppointments.LateAppointmentsFrame;
import GUI.LoginPanel;
import javax.swing.JOptionPane;

/**
 *
 * @author owen
 */
public class BloodCenterPanel extends javax.swing.JPanel {

    /**
     * Creates new form BloodCenterPanel
     */
    
    public static BloodTestCenter bts = new BloodTestCenter();
    public BloodCenterPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        todaysAppsBtn = new javax.swing.JButton();
        checkPatientInBtn = new javax.swing.JButton();
        waitingAppsBtn = new javax.swing.JButton();
        pollNextAppBtn = new javax.swing.JButton();
        lateAppsBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));

        todaysAppsBtn.setText("Today's Appointments");
        todaysAppsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todaysAppsBtnActionPerformed(evt);
            }
        });

        checkPatientInBtn.setText("Check Patient In");
        checkPatientInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPatientInBtnActionPerformed(evt);
            }
        });

        waitingAppsBtn.setText("Waiting Appointments");
        waitingAppsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitingAppsBtnActionPerformed(evt);
            }
        });

        pollNextAppBtn.setText("Poll Next Appointment");
        pollNextAppBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pollNextAppBtnActionPerformed(evt);
            }
        });

        lateAppsBtn.setText("Late Appointments");
        lateAppsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lateAppsBtnActionPerformed(evt);
            }
        });

        jButton1.setText("Log Out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pollNextAppBtn)
                            .addComponent(checkPatientInBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(waitingAppsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(lateAppsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                        .addGap(41, 41, 41)
                        .addComponent(todaysAppsBtn)))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(waitingAppsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(todaysAppsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(lateAppsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkPatientInBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(pollNextAppBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addContainerGap(287, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    //This metthod brings up a display outputting the appointments in the todaysApps arraylist.
    private void todaysAppsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todaysAppsBtnActionPerformed
        TodaysAppointmentsFrame frame = new TodaysAppointmentsFrame();
    }//GEN-LAST:event_todaysAppsBtnActionPerformed

    //Button for bringing up check patient in display.
    private void checkPatientInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPatientInBtnActionPerformed
        CheckBBPatientInFrame frame = new CheckBBPatientInFrame();
    }//GEN-LAST:event_checkPatientInBtnActionPerformed

    //Button brings up display for waitingPatients priority queue. 
    private void waitingAppsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitingAppsBtnActionPerformed
        WaitingAppointmentsFrame frame = new WaitingAppointmentsFrame();
    }//GEN-LAST:event_waitingAppsBtnActionPerformed

    //Button for removing next person up in the priority queue.
    private void pollNextAppBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pollNextAppBtnActionPerformed
        if(!BloodTestCenter.waitingApps.isEmpty()) {
           Appointment app = (Appointment) BloodTestCenter.waitingApps.dequeue();
            int option = JOptionPane.showConfirmDialog(null, app.getPatient().getName()+" is in for their test", "Confirm", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    if(option == JOptionPane.DEFAULT_OPTION) {
                       
            }
        } 
        else {
            JOptionPane.showConfirmDialog(null, "No patients are waiting for an appointment.", "Error", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
        BloodTestCenter.waitingApps.printPQ();
    }//GEN-LAST:event_pollNextAppBtnActionPerformed

    private void lateAppsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lateAppsBtnActionPerformed
        LateAppointmentsFrame frame = new LateAppointmentsFrame();
    }//GEN-LAST:event_lateAppsBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        LoginPanel.mainFrame.cardLayout.show(LoginPanel.mainFrame.mainPanel, "loginPanel");
        BloodTestCenter.todaysApps.clear();
        BloodTestCenter.waitingApps.theQueue.clear();
        BloodTestCenter.lateApps.theQueue.clear();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkPatientInBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton lateAppsBtn;
    private javax.swing.JButton pollNextAppBtn;
    private javax.swing.JButton todaysAppsBtn;
    private javax.swing.JButton waitingAppsBtn;
    // End of variables declaration//GEN-END:variables
}
