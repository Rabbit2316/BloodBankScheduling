/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import ApplicationLogic.MyMain;
import ApplicationLogic.Patient;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author owen
 */
public class CheckoutPatientPanel extends javax.swing.JPanel {

    /**
     * Creates new form CheckoutPatientPanel
     */
    public CheckoutPatientPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ppsnBox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        ppsnBox.setText("PPSN");
        ppsnBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppsnBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("PPSN");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(ppsnBox, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ppsnBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addContainerGap(281, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ppsnBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppsnBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ppsnBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    try {
    int value = Integer.parseInt(ppsnBox.getText());
    Object result = MyMain.db.DB.search(value);  // Assuming search method returns a Patient or null

    if (result == null) {
        // Show pop-up for incorrect PPSN and close the frame when "OK" is pressed
        JOptionPane.showMessageDialog(null, "Incorrect PPSN", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        // Show pop-up for successful patient found with confirmation
        Patient foundPatient = (Patient) result;  // Casting the result to Patient
        String message = "Patient found:\nName: " + foundPatient.getName() + 
                         "\nPPSN: " + foundPatient.getPpsn() + 
                         "\nDate of Birth: " + foundPatient.getDateOfBirth();
        
        // Show the confirmation message
        int option = JOptionPane.showConfirmDialog(null, message, "Patient Found", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
        
        if (option == JOptionPane.OK_OPTION) {
            // Close the CheckoutPatientFrame when OK is clicked
            CheckoutPatientFrame checkoutFrame = (CheckoutPatientFrame) SwingUtilities.getWindowAncestor(ppsnBox); 
            
              // Define the format pattern
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

            // Convert LocalDate to String
            String dateString = foundPatient.getDateOfBirth().format(formatter);
            MainFrame.gpHomePanel.dobValue.setText(dateString);
            MainFrame.gpHomePanel.nameValue.setText(foundPatient.getName());
            MainFrame.gpHomePanel.gpValue.setText(foundPatient.getGp().toString());
            MainFrame.gpHomePanel.ppsnValue.setText(Integer.toString(foundPatient.getPpsn()));
            MainFrame.gpHomePanel.checkedOutPatient = foundPatient;
            MainFrame.gpHomePanel.revalidate();
            MainFrame.gpHomePanel.repaint();
            checkoutFrame.dispose();
        }
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Invalid input. Please enter a valid PPSN.", "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField ppsnBox;
    // End of variables declaration//GEN-END:variables
}
